include "taxonomy.diaspec";


action EmergencyCall {
    emergencyCall();
}

controller SuspiciousAlertController {
	 when provided AlertSuspectRegulation do SendNonCriticalNotification on Notifier, ScheduleTimer on Timer;
	
}

controller RAZController {
	 when provided WrongAlert 
	 do SendNonCriticalNotification on Notifier, ScheduleTimer on Timer;
}


controller CriticalAlertController { 
	 when provided CriticalAlert do SendTrustedMessage on CommunicationService, ScheduleTimer on Timer;
}


context AlertSuspectRegulation as String {//to change
	when provided message from Input	
		get motion from MotionDetector
		maybe publish; // get all and status 
}

context WrongAlert as Integer {//to change
	when provided reply  from Notifier
     maybe publish;

}

context CriticalAlert as Contact[] {//to change
//     when provided reply from Notifier
//      maybe publish;
	when provided timerTriggered from Timer	
		get contacts from AddressBook
      	always publish;
    when provided pushed from Button 
     	get contacts from AddressBook 
     	always publish;

}

//device MotionDetector {
//	source position as Float ;
//	source status as String ;
//}

//device DeviceButton {
//	source pushed as Boolean ;
//}


//device DeviceInput {
//	source me  as Float;
//}



//device MyPhone extends PhysicalDevice {
//
//	action EmergencyCall;
//}

//device Timer {
//	source timerValue as Float;
//	
//	action TriggerTimer;
//		
//	action ResetTimer;
//}